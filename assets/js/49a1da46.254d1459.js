"use strict";(self.webpackChunkstart_school_wiki=self.webpackChunkstart_school_wiki||[]).push([[7099],{2167:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Season 01/Bootcamp C Arc 01/exercise__my_iterative_factorial","title":"my_iterative_factorial","description":"In this exercise, you will implement a function to calculate the factorial of a given number using an iterative approach. The factorial of a number is the product of all positive integers less than or equal to that number. If an invalid input is provided, the function will return 0.","source":"@site/docs/Season 01/Bootcamp C Arc 01/exercise__my_iterative_factorial.md","sourceDirName":"Season 01/Bootcamp C Arc 01","slug":"/Season 01/Bootcamp C Arc 01/exercise__my_iterative_factorial","permalink":"/startSchool-wiki/docs/Season 01/Bootcamp C Arc 01/exercise__my_iterative_factorial","draft":false,"unlisted":false,"editUrl":"https://github.com/start-school/start-school-wiki/tree/main/docs/Season 01/Bootcamp C Arc 01/exercise__my_iterative_factorial.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_label":"(exercise) my_iterative_factorial","sidebar_position":7},"sidebar":"documentationSidebar","previous":{"title":"(exercise) my_string_formatting","permalink":"/startSchool-wiki/docs/Season 01/Bootcamp C Arc 01/exercise__ my_string_formatting"},"next":{"title":"(exercise) my_print_alphabet","permalink":"/startSchool-wiki/docs/Season 01/Bootcamp C Arc 01/exercise__my_print_alphabet"}}');var r=s(4848),n=s(8453);const c={sidebar_label:"(exercise) my_iterative_factorial",sidebar_position:7},o="my_iterative_factorial",l={},a=[{value:"\ud83d\ude80 Key Features",id:"-key-features",level:2},{value:"\ud83d\udcdd Task Requirements",id:"-task-requirements",level:2},{value:"\ud83d\udee0\ufe0f Useful resources for accomplishing this task",id:"\ufe0f-useful-resources-for-accomplishing-this-task",level:2},{value:"Factorial Basics",id:"factorial-basics",level:3},{value:"C Programming Loops",id:"c-programming-loops",level:3},{value:"\ud83e\uddea Test Cases",id:"-test-cases",level:2},{value:"\ud83d\udca1 Tips for Beginners",id:"-tips-for-beginners",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"my_iterative_factorial",children:"my_iterative_factorial"})}),"\n",(0,r.jsxs)(i.p,{children:["In this exercise, you will implement a function to calculate the factorial of a given number using an iterative approach. The factorial of a number is the product of all positive integers less than or equal to that number. If an invalid input is provided, the function will return ",(0,r.jsx)(i.code,{children:"0"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"-key-features",children:"\ud83d\ude80 Key Features"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Iterative Approach"}),": Use loops to compute the factorial of a number."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Input Validation"}),": Handle invalid inputs, such as negative numbers."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Mathematical Computation"}),": Understand and implement the factorial operation."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"-task-requirements",children:"\ud83d\udcdd Task Requirements"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Gandalf Testing"}),": All exercises must pass the gandalf test"]}),"\n"]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"\ufe0f-useful-resources-for-accomplishing-this-task",children:"\ud83d\udee0\ufe0f Useful resources for accomplishing this task"}),"\n",(0,r.jsx)(i.h3,{id:"factorial-basics",children:"Factorial Basics"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.mathsisfun.com/numbers/factorial.html",children:"Understanding Factorial"})}),"\n",(0,r.jsxs)(i.li,{children:["Factorial is denoted by ",(0,r.jsx)(i.code,{children:"n!"})," and is calculated as ",(0,r.jsx)(i.code,{children:"n * (n - 1) * (n - 2) * ... * 1"}),".","\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Example: ",(0,r.jsx)(i.code,{children:"4! = 4 * 3 * 2 * 1 = 24"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"c-programming-loops",children:"C Programming Loops"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.tutorialspoint.com/cprogramming/c_for_loop.htm",children:"For Loop in C"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"https://www.geeksforgeeks.org/loops-in-c/",children:"While Loop in C"})}),"\n"]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"-test-cases",children:"\ud83e\uddea Test Cases"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Input"}),(0,r.jsx)(i.th,{children:"Expected Output"}),(0,r.jsx)(i.th,{children:"Explanation"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"2"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"2"})}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"2! = 2 * 1 = 2"}),"."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"3"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"6"})}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"3! = 3 * 2 * 1 = 6"}),"."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"4"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"24"})}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.code,{children:"4! = 4 * 3 * 2 * 1 = 24"}),"."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"0"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"1"})}),(0,r.jsxs)(i.td,{children:["By definition, ",(0,r.jsx)(i.code,{children:"0! = 1"}),"."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"-1"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"0"})}),(0,r.jsx)(i.td,{children:"Factorial is undefined for negative numbers."})]})]})]}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.h2,{id:"-tips-for-beginners",children:"\ud83d\udca1 Tips for Beginners"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Start with Base Cases"}),": Factorial of ",(0,r.jsx)(i.code,{children:"0"})," is ",(0,r.jsx)(i.code,{children:"1"})," by definition. Factorials of negative numbers should return ",(0,r.jsx)(i.code,{children:"0"}),"."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Use an Iterative Approach"}),": Loops (",(0,r.jsx)(i.code,{children:"for"}),", ",(0,r.jsx)(i.code,{children:"while"}),") are well-suited for computing factorials."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Debugging Tip"}),": Print intermediate results during iterations if your output is incorrect."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,i,s)=>{s.d(i,{R:()=>c,x:()=>o});var t=s(6540);const r={},n=t.createContext(r);function c(e){const i=t.useContext(n);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(n.Provider,{value:i},e.children)}}}]);