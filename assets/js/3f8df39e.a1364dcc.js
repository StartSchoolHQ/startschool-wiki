"use strict";(self.webpackChunkstart_school_wiki=self.webpackChunkstart_school_wiki||[]).push([[1771],{8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var r=n(6540);const i={},t=r.createContext(i);function o(e){const s=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:s},e.children)}},9180:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Preseason/Data/My Imdb Api","title":"My IMDB API","description":"Welcome to the IMDB API Replacement Project! This task challenges you to create a backend API that allows users to search for movies by genre while IMDB is temporarily down.","source":"@site/docs/Preseason/Data/My Imdb Api.md","sourceDirName":"Preseason/Data","slug":"/Preseason/Data/My Imdb Api","permalink":"/startSchool-wiki/docs/Preseason/Data/My Imdb Api","draft":false,"unlisted":false,"editUrl":"https://github.com/start-school/start-school-wiki/tree/main/docs/Preseason/Data/My Imdb Api.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_label":"My Imdb Api","sidebar_position":5},"sidebar":"documentationSidebar","previous":{"title":"My First Scraper","permalink":"/startSchool-wiki/docs/Preseason/Data/My First Scraper"},"next":{"title":"Quest 00","permalink":"/startSchool-wiki/docs/Preseason/Data/Quest00"}}');var i=n(4848),t=n(8453);const o={sidebar_label:"My Imdb Api",sidebar_position:5},l="My IMDB API",a={},c=[{value:"\ud83d\ude80 Key Features",id:"-key-features",level:2},{value:"\ud83d\udcdd Task Requirements",id:"-task-requirements",level:2},{value:"\u2699\ufe0f How the Program Works",id:"\ufe0f-how-the-program-works",level:2},{value:"\u26a0\ufe0f Error Handling",id:"\ufe0f-error-handling",level:2},{value:"\ud83d\udee0\ufe0f Useful Resources for Accomplishing this Task",id:"\ufe0f-useful-resources-for-accomplishing-this-task",level:2},{value:"Websites/Documentation",id:"websitesdocumentation",level:3},{value:"Exercise-Specific Tips",id:"exercise-specific-tips",level:3},{value:"Example Curl Commands",id:"example-curl-commands",level:3},{value:"Sample Project Structure",id:"sample-project-structure",level:3}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"my-imdb-api",children:"My IMDB API"})}),"\n",(0,i.jsx)(s.p,{children:"Welcome to the IMDB API Replacement Project! This task challenges you to create a backend API that allows users to search for movies by genre while IMDB is temporarily down."}),"\n",(0,i.jsx)(s.h2,{id:"-key-features",children:"\ud83d\ude80 Key Features"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Genre-based Movie Search"}),": Filter movies by specific genres"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CSV Data Parsing"}),": Read and process movie data from a provided CSV file"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RESTful API Endpoints"}),": Serve movie data through multiple HTTP routes"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"JSON Response"}),": All routes return data in JSON format"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"-task-requirements",children:"\ud83d\udcdd Task Requirements"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Backend Framework"}),": Use a lightweight web framework (recommended: Flask for Python)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Port Specification"}),": Server must listen on port 8080"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Routes Implementation"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["GET on ",(0,i.jsx)(s.code,{children:"/"}),": Filter movies by genre using query parameter"]}),"\n",(0,i.jsxs)(s.li,{children:["GET on ",(0,i.jsx)(s.code,{children:"/action"}),": Serve only action movies"]}),"\n",(0,i.jsxs)(s.li,{children:["GET on ",(0,i.jsx)(s.code,{children:"/adventure"}),": Serve only adventure movies"]}),"\n",(0,i.jsxs)(s.li,{children:["GET on ",(0,i.jsx)(s.code,{children:"/comedy"}),": Serve only comedy movies"]}),"\n",(0,i.jsxs)(s.li,{children:["GET on ",(0,i.jsx)(s.code,{children:"/drama"}),": Serve only drama movies"]}),"\n",(0,i.jsxs)(s.li,{children:["GET on ",(0,i.jsx)(s.code,{children:"/romance"}),": Serve only romance movies"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Data Source"}),": Parse the provided CSV file (no database required)"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Response Format"}),": All routes must return JSON-formatted responses"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Accessibility"}),": Server should be accessible at ",(0,i.jsx)(s.code,{children:"http://web-XXXXXXXXX.docode.YYYY.qwasar.io"})]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"\ufe0f-how-the-program-works",children:"\u2699\ufe0f How the Program Works"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Data Processing"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Read the CSV file containing movie information"}),"\n",(0,i.jsx)(s.li,{children:"Parse the file and create an in-memory data structure"}),"\n",(0,i.jsx)(s.li,{children:"Filter movies based on requested genre"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Route Handling"}),":","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Root route (",(0,i.jsx)(s.code,{children:"/"}),") accepts a ",(0,i.jsx)(s.code,{children:"genre"})," query parameter"]}),"\n",(0,i.jsx)(s.li,{children:"Genre-specific routes return movies matching that genre"}),"\n",(0,i.jsx)(s.li,{children:"Multiple genres in a movie are supported (comma-separated)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"\ufe0f-error-handling",children:"\u26a0\ufe0f Error Handling"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Handle cases where no movies match the requested genre"}),"\n",(0,i.jsx)(s.li,{children:"Provide appropriate error messages for invalid genre requests"}),"\n",(0,i.jsx)(s.li,{children:"Ensure robust parsing of CSV file with potential variations"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"\ufe0f-useful-resources-for-accomplishing-this-task",children:"\ud83d\udee0\ufe0f Useful Resources for Accomplishing this Task"}),"\n",(0,i.jsx)(s.h3,{id:"websitesdocumentation",children:"Websites/Documentation"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://flask.palletsprojects.com/",children:"Flask Documentation"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://docs.python.org/3/library/csv.html",children:"Python CSV Parsing"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.a,{href:"https://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api",children:"RESTful API Design Best Practices"})}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"exercise-specific-tips",children:"Exercise-Specific Tips"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Use ",(0,i.jsx)(s.code,{children:"papaparse"})," or Python's ",(0,i.jsx)(s.code,{children:"csv"})," module for CSV parsing"]}),"\n",(0,i.jsx)(s.li,{children:"Implement case-insensitive genre matching"}),"\n",(0,i.jsx)(s.li,{children:"Consider using list comprehensions for efficient movie filtering"}),"\n",(0,i.jsx)(s.li,{children:"Add logging to track API usage and potential issues"}),"\n",(0,i.jsx)(s.li,{children:"Include a README.md with installation and running instructions"}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"example-curl-commands",children:"Example Curl Commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'# Search by genre using query parameter\ncurl "http://localhost:8080?genre=action"\n\n# Direct genre route\ncurl "http://localhost:8080/western"\n'})}),"\n",(0,i.jsx)(s.h3,{id:"sample-project-structure",children:"Sample Project Structure"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"my_imdb_api/\n\u2502\n\u251c\u2500\u2500 movies.csv         # Provided movie data file\n\u251c\u2500\u2500 app.py             # Main Flask application\n\u251c\u2500\u2500 README.md          # Project documentation\n\u2514\u2500\u2500 requirements.txt   # Python dependencies (only if necessary)\n"})})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);