"use strict";(self.webpackChunkstart_school_wiki=self.webpackChunkstart_school_wiki||[]).push([[6167],{4768:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"Season 01/Bootcamp C Arc 01/exercise__my_print_alphabet","title":"my_print_alphabet","description":"In this exercise, you will create a function that displays the alphabet in lowercase on a single line, starting with the letter \'a\' and ending with \'z\'. Each character will be printed sequentially in ascending order, followed by a newline character.","source":"@site/docs/Season 01/Bootcamp C Arc 01/exercise__my_print_alphabet.md","sourceDirName":"Season 01/Bootcamp C Arc 01","slug":"/Season 01/Bootcamp C Arc 01/exercise__my_print_alphabet","permalink":"/startSchool-wiki/docs/Season 01/Bootcamp C Arc 01/exercise__my_print_alphabet","draft":false,"unlisted":false,"editUrl":"https://github.com/start-school/start-school-wiki/tree/main/docs/Season 01/Bootcamp C Arc 01/exercise__my_print_alphabet.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_label":"(exercise) my_print_alphabet","sidebar_position":6},"sidebar":"documentationSidebar","previous":{"title":"(exercise) my_iterative_factorial","permalink":"/startSchool-wiki/docs/Season 01/Bootcamp C Arc 01/exercise__my_iterative_factorial"},"next":{"title":"(exercise) my_recursive_factorial","permalink":"/startSchool-wiki/docs/Season 01/Bootcamp C Arc 01/exercise__my_recursive_factorial"}}');var s=r(4848),i=r(8453);const a={sidebar_label:"(exercise) my_print_alphabet",sidebar_position:6},c="my_print_alphabet",l={},o=[{value:"\ud83d\ude80 Key Features",id:"-key-features",level:2},{value:"\ud83d\udcdd Task Requirements",id:"-task-requirements",level:2},{value:"\ud83d\udee0\ufe0f Useful resources for accomplishing this task",id:"\ufe0f-useful-resources-for-accomplishing-this-task",level:2},{value:"Printing Characters in C",id:"printing-characters-in-c",level:3},{value:"ASCII Table",id:"ascii-table",level:3},{value:"\ud83e\uddea Test Cases",id:"-test-cases",level:2},{value:"\ud83d\udca1 Tips for Beginners",id:"-tips-for-beginners",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"my_print_alphabet",children:"my_print_alphabet"})}),"\n",(0,s.jsx)(t.p,{children:"In this exercise, you will create a function that displays the alphabet in lowercase on a single line, starting with the letter 'a' and ending with 'z'. Each character will be printed sequentially in ascending order, followed by a newline character."}),"\n",(0,s.jsx)(t.h2,{id:"-key-features",children:"\ud83d\ude80 Key Features"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Character Iteration"}),": Use loops to iterate over characters from 'a' to 'z'."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Printing Characters"}),": Learn how to print characters in C using standard output functions."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Formatting"}),": Ensure proper output format with a newline character at the end."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"-task-requirements",children:"\ud83d\udcdd Task Requirements"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Gandalf Testing"}),": All exercises must pass the gandalf test"]}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"\ufe0f-useful-resources-for-accomplishing-this-task",children:"\ud83d\udee0\ufe0f Useful resources for accomplishing this task"}),"\n",(0,s.jsx)(t.h3,{id:"printing-characters-in-c",children:"Printing Characters in C"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://www.geeksforgeeks.org/putchar-function-in-c/",children:"putchar() function in C"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://www.tutorialspoint.com/cprogramming/c_loops.htm",children:"C Loops"})}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"ascii-table",children:"ASCII Table"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["ASCII values are numerical representations of characters. For example, ",(0,s.jsx)(t.code,{children:"'a'"})," has an ASCII value of ",(0,s.jsx)(t.code,{children:"97"}),", and ",(0,s.jsx)(t.code,{children:"'z'"})," has a value of ",(0,s.jsx)(t.code,{children:"122"}),". Use these values to iterate over the alphabet."]}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.a,{href:"https://www.asciitable.com/",children:"ASCII Table Reference"})}),"\n"]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"-test-cases",children:"\ud83e\uddea Test Cases"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Input"}),(0,s.jsx)(t.th,{children:"Expected Output"}),(0,s.jsx)(t.th,{children:"Explanation"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"None"}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"abcdefghijklmnopqrstuvwxyz\\n"})}),(0,s.jsx)(t.td,{children:"Prints all lowercase letters followed by a newline."})]})})]}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"-tips-for-beginners",children:"\ud83d\udca1 Tips for Beginners"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Use ASCII Values"}),": You can iterate over characters just like numbers because they have corresponding ASCII values."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"putchar Function"}),": ",(0,s.jsx)(t.code,{children:"putchar(c)"})," prints a single character to the standard output. It's simpler than ",(0,s.jsx)(t.code,{children:"printf"})," for single characters."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Newline Character"}),": Always remember to add a newline character (",(0,s.jsx)(t.code,{children:"\\n"}),") at the end of your output for proper formatting."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Debugging Tip"}),": If your output doesn't look right, check for off-by-one errors in your loop conditions or missing newline characters."]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>c});var n=r(6540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);