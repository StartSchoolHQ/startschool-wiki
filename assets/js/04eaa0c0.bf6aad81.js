"use strict";(self.webpackChunkstart_school_wiki=self.webpackChunkstart_school_wiki||[]).push([[4951],{2914:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>d,contentTitle:()=>h,default:()=>l,frontMatter:()=>c,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"Season 01/Bootcamp C Arc 01/exercise__ my_strchr","title":"my_strchr","description":"In this exercise, you will implement a function that searches for the first occurrence of a given character in a string. If the character is found, the function returns a pointer to the first matching character in the string. If no match is found, the function returns NULL.","source":"@site/docs/Season 01/Bootcamp C Arc 01/exercise__ my_strchr.md","sourceDirName":"Season 01/Bootcamp C Arc 01","slug":"/Season 01/Bootcamp C Arc 01/exercise__ my_strchr","permalink":"/startSchool-wiki/docs/Season 01/Bootcamp C Arc 01/exercise__ my_strchr","draft":false,"unlisted":false,"editUrl":"https://github.com/start-school/start-school-wiki/tree/main/docs/Season 01/Bootcamp C Arc 01/exercise__ my_strchr.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_label":"(exercise) my_strchr","sidebar_position":10},"sidebar":"documentationSidebar","previous":{"title":"Season 01","permalink":"/startSchool-wiki/docs/category/season-01"},"next":{"title":"(exercise) my_string_formatting","permalink":"/startSchool-wiki/docs/Season 01/Bootcamp C Arc 01/exercise__ my_string_formatting"}}');var t=s(4848),i=s(8453);const c={sidebar_label:"(exercise) my_strchr",sidebar_position:10},h="my_strchr",d={},o=[{value:"\ud83d\ude80 Key Features",id:"-key-features",level:2},{value:"\ud83d\udcdd Task Requirements",id:"-task-requirements",level:2},{value:"\ud83d\udee0\ufe0f Useful resources for accomplishing this task",id:"\ufe0f-useful-resources-for-accomplishing-this-task",level:2},{value:"Pointer Basics",id:"pointer-basics",level:3},{value:"String Basics",id:"string-basics",level:3},{value:"\ud83e\uddea Test Cases",id:"-test-cases",level:2},{value:"\ud83d\udca1 Tips for Beginners",id:"-tips-for-beginners",level:2}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"my_strchr",children:"my_strchr"})}),"\n",(0,t.jsxs)(r.p,{children:["In this exercise, you will implement a function that searches for the first occurrence of a given character in a string. If the character is found, the function returns a pointer to the first matching character in the string. If no match is found, the function returns ",(0,t.jsx)(r.code,{children:"NULL"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"-key-features",children:"\ud83d\ude80 Key Features"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"String Traversal"}),": Iterate through a string to find a specific character."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Pointer Arithmetic"}),": Return a pointer to the matching character in the string."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Null Handling"}),": Ensure correct handling of null characters and return values."]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"-task-requirements",children:"\ud83d\udcdd Task Requirements"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Gandalf Testing"}),": All exercises must pass the gandalf test"]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"\ufe0f-useful-resources-for-accomplishing-this-task",children:"\ud83d\udee0\ufe0f Useful resources for accomplishing this task"}),"\n",(0,t.jsx)(r.h3,{id:"pointer-basics",children:"Pointer Basics"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.geeksforgeeks.org/pointers-in-c-and-c-set-1-introduction-arithmetic-and-array/",children:"Pointers in C"})}),"\n",(0,t.jsx)(r.li,{children:"Use pointers to traverse a string and locate specific characters."}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"string-basics",children:"String Basics"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.tutorialspoint.com/cprogramming/c_strings.htm",children:"Strings in C"})}),"\n",(0,t.jsxs)(r.li,{children:["Strings are null-terminated, meaning they end with the ",(0,t.jsx)(r.code,{children:"'\\0'"})," character."]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-test-cases",children:"\ud83e\uddea Test Cases"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Input String"}),(0,t.jsx)(r.th,{children:"Input Character"}),(0,t.jsx)(r.th,{children:"Expected Output"}),(0,t.jsx)(r.th,{children:"Explanation"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:'"abcabc"'})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"'b'"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:'"bcabc"'})}),(0,t.jsxs)(r.td,{children:["First ",(0,t.jsx)(r.code,{children:"'b'"})," found at index 1, return from there."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:'"121212"'})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"'2'"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:'"21212"'})}),(0,t.jsxs)(r.td,{children:["First ",(0,t.jsx)(r.code,{children:"'2'"})," found at index 1, return from there."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:'"abc"'})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"'d'"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"NULL"})}),(0,t.jsxs)(r.td,{children:[(0,t.jsx)(r.code,{children:"'d'"})," is not in the string, return ",(0,t.jsx)(r.code,{children:"NULL"}),"."]})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:'"hello\\0"'})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"'\\0'"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:'"\\0"'})}),(0,t.jsx)(r.td,{children:"Null character matches the end of the string."})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:'""'})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"'a'"})}),(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"NULL"})}),(0,t.jsx)(r.td,{children:"Empty string cannot contain any character."})]})]})]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-tips-for-beginners",children:"\ud83d\udca1 Tips for Beginners"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Null-Terminated Strings"}),": Remember that strings in C end with a ",(0,t.jsx)(r.code,{children:"'\\0'"})," character. Include it in your comparisons."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Pointer Arithmetic"}),": Increment the pointer to traverse the string."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Edge Cases"}),": Consider scenarios like empty strings and null characters in your implementation."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Debugging Tip"}),": Use ",(0,t.jsx)(r.code,{children:"printf"})," to print pointer values and characters during traversal to ensure correctness."]}),"\n"]})]})}function l(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>c,x:()=>h});var n=s(6540);const t={},i=n.createContext(t);function c(e){const r=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function h(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);