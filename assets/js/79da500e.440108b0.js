"use strict";(self.webpackChunkstart_school_wiki=self.webpackChunkstart_school_wiki||[]).push([[2988],{7206:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"CollaborativeCoding/Project3/session12","title":"Regular expression matching","description":"Collaborative coding exercise","source":"@site/docs/CollaborativeCoding/Project3/task6.md","sourceDirName":"CollaborativeCoding/Project3","slug":"/CollaborativeCoding/Project3/session12","permalink":"/startschool-wiki/docs/CollaborativeCoding/Project3/session12","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Regular expression matching","description":"Collaborative coding exercise","id":"session12"},"sidebar":"collabCodingSidebar","previous":{"title":"Palindrome number","permalink":"/startschool-wiki/docs/CollaborativeCoding/Project3/session11"}}');var t=s(4848),a=s(8453);const i={title:"Regular expression matching",description:"Collaborative coding exercise",id:"session12"},c="Regular expression matching",l={},o=[{value:"Problem description",id:"problem-description",level:2},{value:"Examples",id:"examples",level:2},{value:"Example 1:",id:"example-1",level:3},{value:"Example 2:",id:"example-2",level:3},{value:"Example 3:",id:"example-3",level:3},{value:"Constraints",id:"constraints",level:2},{value:"Pattern Rules",id:"pattern-rules",level:2},{value:"The &#39;.&#39; character:",id:"the--character",level:3},{value:"The &#39;*&#39; character:",id:"the--character-1",level:3},{value:"Important notes:",id:"important-notes",level:3},{value:"Test Cases",id:"test-cases",level:2},{value:"Edge Cases to Consider",id:"edge-cases-to-consider",level:2},{value:"Key Observations",id:"key-observations",level:2},{value:"Approach Considerations",id:"approach-considerations",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"regular-expression-matching",children:"Regular expression matching"})}),"\n",(0,t.jsx)(n.h2,{id:"problem-description",children:"Problem description"}),"\n",(0,t.jsxs)(n.p,{children:["Given an input string ",(0,t.jsx)(n.code,{children:"s"})," and a pattern ",(0,t.jsx)(n.code,{children:"p"}),", implement regular expression matching with support for ",(0,t.jsx)(n.code,{children:"'.'"})," and ",(0,t.jsx)(n.code,{children:"'*'"})," where:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'.'"})," matches any single character"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'*'"})," matches zero or more of the preceding element"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The matching should cover the ",(0,t.jsx)(n.strong,{children:"entire input string"})," (not partial)."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.h3,{id:"example-1",children:"Example 1:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'Input: s = "aa", p = "a"\nOutput: false\nExplanation: "a" does not match the entire string "aa".\n'})}),"\n",(0,t.jsx)(n.h3,{id:"example-2",children:"Example 2:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: s = \"aa\", p = \"a*\"\nOutput: true\nExplanation: '*' means zero or more of the preceding element, 'a'. Therefore, by repeating 'a' once, it becomes \"aa\".\n"})}),"\n",(0,t.jsx)(n.h3,{id:"example-3",children:"Example 3:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'Input: s = "ab", p = ".*"\nOutput: true\nExplanation: ".*" means "zero or more (*) of any character (.)".\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"constraints",children:"Constraints"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= s.length <= 20"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= p.length <= 20"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"s"})," contains only lowercase English letters"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"p"})," contains only lowercase English letters, ",(0,t.jsx)(n.code,{children:"'.'"}),", and ",(0,t.jsx)(n.code,{children:"'*'"})]}),"\n",(0,t.jsxs)(n.li,{children:["It is guaranteed for each appearance of the character ",(0,t.jsx)(n.code,{children:"'*'"}),", there will be a previous valid character to match"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"pattern-rules",children:"Pattern Rules"}),"\n",(0,t.jsx)(n.h3,{id:"the--character",children:"The '.' character:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Matches ",(0,t.jsx)(n.strong,{children:"exactly one"})," of any character"]}),"\n",(0,t.jsxs)(n.li,{children:["Example: ",(0,t.jsx)(n.code,{children:'"a."'})," matches ",(0,t.jsx)(n.code,{children:'"ab"'}),", ",(0,t.jsx)(n.code,{children:'"ac"'}),", ",(0,t.jsx)(n.code,{children:'"a1"'}),", etc."]}),"\n",(0,t.jsx)(n.li,{children:"Does NOT match zero characters"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"the--character-1",children:"The '*' character:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Matches ",(0,t.jsx)(n.strong,{children:"zero or more"})," of the ",(0,t.jsx)(n.strong,{children:"preceding element"})]}),"\n",(0,t.jsx)(n.li,{children:"Always appears after another character"}),"\n",(0,t.jsxs)(n.li,{children:["Example: ",(0,t.jsx)(n.code,{children:'"a*"'})," can match ",(0,t.jsx)(n.code,{children:'""'})," (zero a's), ",(0,t.jsx)(n.code,{children:'"a"'})," (one a), ",(0,t.jsx)(n.code,{children:'"aa"'})," (two a's), ",(0,t.jsx)(n.code,{children:'"aaa"'})," (three a's), etc."]}),"\n",(0,t.jsxs)(n.li,{children:["Example: ",(0,t.jsx)(n.code,{children:'".*"'})," can match any string (zero or more of any character)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"important-notes",children:"Important notes:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'*'"})," applies to the character immediately before it"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'*'"})," cannot appear at the start of a pattern"]}),"\n",(0,t.jsxs)(n.li,{children:["Multiple ",(0,t.jsx)(n.code,{children:"'*'"})," can appear in a pattern (e.g., ",(0,t.jsx)(n.code,{children:'"a*b*c*"'}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"test-cases",children:"Test Cases"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'// Basic cases\nInput: s = "aa", p = "a"\nOutput: false\n\nInput: s = "aa", p = "a*"\nOutput: true\n\nInput: s = "ab", p = ".*"\nOutput: true\n\n// Edge cases with \'*\'\nInput: s = "aab", p = "c*a*b"\nOutput: true\nExplanation: c* matches zero c\'s, a* matches two a\'s, b matches b\n\nInput: s = "mississippi", p = "mis*is*p*."\nOutput: false\n\nInput: s = "mississippi", p = "mis*is*ip*."\nOutput: true\n\n// Edge cases with \'.\'\nInput: s = "ab", p = ".."\nOutput: true\n\nInput: s = "ab", p = "."\nOutput: false\n\nInput: s = "a", p = "ab*"\nOutput: true\nExplanation: b* matches zero b\'s\n\n// Empty matches\nInput: s = "", p = ""\nOutput: true\n\nInput: s = "", p = "a*"\nOutput: true\nExplanation: a* can match zero a\'s\n\nInput: s = "a", p = ""\nOutput: false\n\n// Complex patterns\nInput: s = "aaa", p = "a*a"\nOutput: true\nExplanation: a* matches "aa", then a matches "a"\n\nInput: s = "aaa", p = "ab*a*c*a"\nOutput: true\nExplanation: b* matches zero b\'s, a* matches two a\'s, c* matches zero c\'s, a matches "a"\n\nInput: s = "a", p = ".*..a*"\nOutput: false\n\nInput: s = "ab", p = ".*c"\nOutput: false\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"edge-cases-to-consider",children:"Edge Cases to Consider"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Empty string and empty pattern"}),": both empty should return true"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Empty string with pattern"}),": pattern with '*' can match empty string"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Empty pattern with string"}),": cannot match non-empty string"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Star at beginning"}),": guaranteed not to happen per constraints"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multiple stars in a row"}),": e.g., ",(0,t.jsx)(n.code,{children:'"a**"'})," is not valid per constraints"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pattern longer than string"}),": can still match (e.g., ",(0,t.jsx)(n.code,{children:'s = "a"'}),", ",(0,t.jsx)(n.code,{children:'p = "ab*c*"'}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"String longer than pattern"}),": pattern with ",(0,t.jsx)(n.code,{children:".*"})," or multiple ",(0,t.jsx)(n.code,{children:"*"})," can match"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"key-observations",children:"Key Observations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Greedy vs non-greedy matching"}),": ",(0,t.jsx)(n.code,{children:"'*'"})," can match different amounts"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.code,{children:'s = "aaa"'}),", ",(0,t.jsx)(n.code,{children:'p = "a*a"'}),": the ",(0,t.jsx)(n.code,{children:"a*"})," could match 0, 1, or 2 a's"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Order matters"}),": pattern must match from left to right"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'s = "ba"'}),", ",(0,t.jsx)(n.code,{children:'p = "ab"'})," returns false"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Complete match required"}),": entire string must be consumed"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'s = "aaa"'}),", ",(0,t.jsx)(n.code,{children:'p = "a"'})," returns false (doesn't match all three a's)"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Star flexibility"}),": ",(0,t.jsx)(n.code,{children:"x*"})," can match zero occurrences"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'s = "b"'}),", ",(0,t.jsx)(n.code,{children:'p = "a*b"'})," returns true"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"approach-considerations",children:"Approach Considerations"}),"\n",(0,t.jsx)(n.p,{children:"Think about:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["How do you handle the ",(0,t.jsx)(n.code,{children:"'*'"})," character matching zero or more?"]}),"\n",(0,t.jsxs)(n.li,{children:["How do you handle the ",(0,t.jsx)(n.code,{children:"'.'"})," character?"]}),"\n",(0,t.jsx)(n.li,{children:"Should you use recursion or iteration?"}),"\n",(0,t.jsx)(n.li,{children:"Can you use dynamic programming?"}),"\n",(0,t.jsx)(n.li,{children:"What are the base cases?"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);