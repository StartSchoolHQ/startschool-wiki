"use strict";(self.webpackChunkstart_school_wiki=self.webpackChunkstart_school_wiki||[]).push([[5579],{8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var r=t(6540);const n={},i=r.createContext(n);function o(e){const s=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:s},e.children)}},9379:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Preseason/Web/exercise-my-putstr","title":"My Putstr C","description":"Welcome to the My Putstr exercise of Preseason Web track! Here you will learn how to display a string of characters on the standard output in C.","source":"@site/docs/Preseason/Web/exercise-my-putstr.md","sourceDirName":"Preseason/Web","slug":"/Preseason/Web/exercise-my-putstr","permalink":"/startschool-wiki/docs/Preseason/Web/exercise-my-putstr","draft":false,"unlisted":false,"editUrl":"https://github.com/start-school/start-school-wiki/tree/main/docs/Preseason/Web/exercise-my-putstr.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_label":"My Putstr","sidebar_position":1},"sidebar":"documentationSidebar","previous":{"title":"My Fibonacci","permalink":"/startschool-wiki/docs/Preseason/Web/exercise-my-fibonacci"},"next":{"title":"My Recursive Pow","permalink":"/startschool-wiki/docs/Preseason/Web/exercise-my-recursive-pow"}}');var n=t(4848),i=t(8453);const o={sidebar_label:"My Putstr",sidebar_position:"1"},a="My Putstr C",c={},l=[{value:"\ud83d\ude80 Key Features",id:"-key-features",level:2},{value:"\ud83d\udcdd Task Requirements",id:"-task-requirements",level:2},{value:"\ud83d\udee0\ufe0f Useful resources for accomplishing this task",id:"\ufe0f-useful-resources-for-accomplishing-this-task",level:2},{value:"\ud83d\udca1 Advice for completing the task",id:"-advice-for-completing-the-task",level:2}];function d(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"my-putstr-c",children:"My Putstr C"})}),"\n",(0,n.jsx)(s.p,{children:"Welcome to the My Putstr exercise of Preseason Web track! Here you will learn how to display a string of characters on the standard output in C."}),"\n",(0,n.jsx)(s.h2,{id:"-key-features",children:"\ud83d\ude80 Key Features"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"String Handling"}),": Learn how to handle and display strings in C."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Pointer Usage"}),": Understand how to use pointers to manipulate strings."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"-task-requirements",children:"\ud83d\udcdd Task Requirements"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Function prototype"}),": Follow the expected input type & output type for the program."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Function naming"}),": Name the program according to the task's requirements."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Gandalf Testing"}),": Your program must pass Gandalf test(-s)."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"\ufe0f-useful-resources-for-accomplishing-this-task",children:"\ud83d\udee0\ufe0f Useful resources for accomplishing this task"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.strong,{children:"Platform for practicing C core concepts!"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.strong,{children:"String Handling in C"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.strong,{children:"Pointers in C"})}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"-advice-for-completing-the-task",children:"\ud83d\udca1 Advice for completing the task"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Make sure to keep parameters' (param_1, param_2,...) names relevant to the function. It improves readability of the code both for you and for someone reviewing your code."}),"\n",(0,n.jsx)(s.li,{children:"Make sure to name the function according to its function. This is a general advice, in this exercise it's already done by Qwasar ;)"}),"\n",(0,n.jsxs)(s.li,{children:["Make sure to put a semicolon ",(0,n.jsx)(s.code,{children:";"})," after the function and after each statement inside."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsxs)(s.em,{children:["Side note for ",(0,n.jsx)(s.strong,{children:"StartSchoolers"}),": consider checking out ",(0,n.jsx)(s.strong,{children:"StartSchool Riga HQ"})," document on ",(0,n.jsx)(s.a,{href:"https://coda.io/",children:"coda.io"})," for more useful resources & information!"]})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);